{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","id","name","email","body","className","href","CommentList","comments","map","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"s28IAEaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAA0BD,EAA1BC,GAAIC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,KAEzB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBAAGG,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACGA,OAIL,qBAAKE,UAAU,oBAAf,SAAoCD,MAXJH,ICHzBM,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,yBAASH,UAAU,cAAnB,SACGG,EAASC,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQC,WCJrCS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,8BACG,cAED,mBAAGN,UAAU,WAAWC,KAAI,iBAAYK,EAAKR,OAA7C,SACGQ,EAAKT,YCHCU,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOH,EAAyBE,EAAzBF,KAAMP,EAAmBS,EAAnBT,KAAMI,EAAaK,EAAbL,SAE3B,OAEE,0BAASH,UAAU,WAAnB,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCS,IAChCH,GAAQ,cAAC,EAAD,CAAUA,KAAMA,OAG3B,mBAAGN,UAAU,iBAAb,SAA+BD,IAE/B,uBACCI,EAASO,OACR,cAAC,EAAD,CAAaP,SAAUA,IAEvB,mBAAG,UAAQ,oBAAX,kCCnBKQ,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,yBAAwBZ,UAAU,WAAlC,SACGY,EAAMR,KAAI,SAAAI,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,QAFNI,EAAMhB,KCWhBgB,EAAQC,EAAgBT,KAAI,SAAAI,GAAI,kCACjCA,GADiC,IAEpCF,MATkBQ,EASAN,EAAKM,OATKC,EAAgBC,MAAK,qBAAGpB,KAAgBkB,MACjE,MASHX,UAPsBc,EAOIT,EAAKZ,GAPCsB,EAAmBC,QACnD,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,MAC3B,QAFmB,IAAAA,EAHJH,KAaPM,EAAM,kBACjB,0BAASpB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAGCY,GAAS,cAAC,EAAD,CAAUA,MAAOA,QCrB/BS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c0c6230d.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => {\n  const { id, name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\" key={id}>\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">{body}</div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo/CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <section className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </section>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <p>\n    {' Posted by '}\n\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </p>\n);\n","import { CommentList } from '../CommentList/CommentList';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { title, user, body, comments } = post;\n\n  return (\n\n    <article className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n        {user && <UserInfo user={user} />}\n      </div>\n\n      <p className=\"PostInfo__body\">{body}</p>\n\n      <hr />\n      {comments.length ? (\n        <CommentList comments={comments} />\n      ) : (\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      )}\n    </article>\n  );\n};\n","import { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <section key={posts.id} className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList/PostList';\n\nconst getUserById = userId => usersFromServer.find(({ id }) => id === userId)\n  || null;\n\nconst getCommentsById = postId => commentsFromServer.filter(\n  comment => comment.postId === postId,\n) || null;\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">\n      Static list of posts\n    </h1>\n    {posts && <PostList posts={posts} />}\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}